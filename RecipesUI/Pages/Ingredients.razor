@page "/ingredients"
@using RecipesUI.Services
@using IO.Swagger.Models
@inject IngredientService IngredientService
@inject ILogger<Ingredients> Logger

<h3>Ingredients</h3>

@if (ingredients == null)
{
    <p><em>Loading ingredients...</em></p>
}
else if (!ingredients.Any())
{
    <p>No ingredients found.</p>
}
else
{
    <ul>
        @foreach (var ingredient in ingredients)
        {
            <li>@ingredient.Name</li>
        }
    </ul>
}

@code {
    private List<IngredientResponse> ingredients;

    protected override async Task OnInitializedAsync()
    {
        await LoadIngredients();
    }

    private async Task LoadIngredients()
    {
        try
        {
            Logger.LogInformation("Fetching ingredients.");
            ingredients = await IngredientService.GetIngredientsAsync() ?? new List<IngredientResponse>();
            Logger.LogInformation("Ingredients fetched successfully.");
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error fetching ingredients.");
        }
    }
}
